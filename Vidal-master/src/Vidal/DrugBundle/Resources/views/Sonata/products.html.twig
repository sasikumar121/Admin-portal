<script type="text/javascript">
	$(document).ready(function() {
		// Продукты: список
		{% if object.products and object.products.count %}
		var ul = $('<ul class="list ul-remove">{% for product in object.products %}<li data="{{ product.ProductID }}"><b><a href="{{ path('product_remove', {'type':object|type, 'id':object.id, 'ProductID':product.ProductID}) }}">X</a></b>' + '{{ product.RusName|raw }} {{ product.ProductID }}' + '</li>{% endfor %}</ul>');
		$('.doc').parent().append(ul);
		{% endif %}

		// Продукты: автодополнение
		$('.doc').attr('placeholder', 'Начните вводить препарат или ID препарата')
			.autocomplete({
				minLength: 1,
				source:    function(request, response) {
					var url = Routing.generate('elastic_autocomplete_product', {'term': request.term.trim()});
					$.getJSON(url, function(data) {
						var hits = data.hits.hits;
						var ids = $('.ul-remove li').map(function(element) {
							return $(this).attr("data");
						});
						var values = [];

						for (var i = 0; i < hits.length; i++) {
							var item = hits[i];
							if (jQuery.inArray(item._id, ids) == -1) {
								values.push({
									'label': item.highlight.name,
									'value': item._source.name,
									'id':    item._id
								});
							}
						}
						values.sort(function(a, b) {
							return (a.value == b.value) ? 0 : ((a.value > b.value) ? 1 : -1);
						});
						response(values);
					});
				},
				select:    function(event, ui) {
					if (ui.item) {
						$.getJSON(Routing.generate('product_add', {
							'type':      '{{ object|type }}',
							'id':        '{{ object.id }}',
							'ProductID': ui.item.id
						}), function() {
							var li = '<li data="' + ui.item.id + '"><b><a href="' + Routing.generate('product_remove', {
									'type':      '{{ object|type }}',
									'id':        '{{ object.id }}',
									'ProductID': ui.item.id
								}) + '">X</a></b>' + ui.item.value + '</li>';
							var $li = $(li);
							var $ul = $('.ul-remove');
							if (!$ul.length) {
								$('.doc').parent().append($('<ul class="ul-remove"></ul>'));
								$ul = $('.ul-remove');
							}
							$ul.append($li);
						});
					}

					$(this).val('');

					return false;
				}
			})
			.data("ui-autocomplete")._renderItem =
			function(ul, item) {
				return $("<li></li>").data("item.autocomplete", item).append("<a>" + item.label + "</a>").appendTo(ul);
			};

		// ATC: список
		{% if object.atcCodes is not empty %}
		var ulAtc = $('<ul class="list atcCodes-list">{% for atc in object.atcCodes %}<li data="{{ atc.ATCCode }}"><b><a href="{{ path('atc_remove', {'type':object|type, 'id':object.id, 'ATCCode':atc.ATCCode}) }}">X</a></b>' + '{{ atc.ATCCode }} {{ atc.RusName|raw }}' + '</li>{% endfor %}</ul>');
		$('.atcCodes-text').parent().append(ulAtc);
		{% endif %}

		// ATC: автодополнение
		$('.atcCodes-text')
			.autocomplete({
				minLength: 1,
				source:    function(request, response) {
					var url = Routing.generate('autocomplete_atc', {'term': request.term.trim()});
					$.getJSON(url, function(data) {
						var ids = $('.atcCodes-list li').map(function(element) {
							return $(this).attr("data");
						});
						var values = [];

						for (var i = 0; i < data.length; i++) {
							if ($.inArray(data[i].id, ids) == -1) {
								values.push({
									'id':   data[i].id,
									'text': data[i].text
								});
							}
						}

						response(values);
					});
				},
				select:    function(event, ui) {
					if (ui.item) {
						var urlAdd = Routing.generate('atc_add', {
							'type':    '{{ object|type }}',
							'id':      '{{ object.id }}',
							'ATCCode': ui.item.id
						});
						var urlRemove = Routing.generate('atc_remove', {
							'type':    '{{ object|type }}',
							'id':      '{{ object.id }}',
							'ATCCode': ui.item.id
						});
						$.getJSON(urlAdd, function(data) {
							if (data == 'OK') {
								var li = '<li data="' + ui.item.id + '"><b><a href="' + urlRemove + '">X</a></b>' + ui.item.text + '</li>';
								var $li = $(li);
								var $list = $('.atcCodes-list');
								if (!$list.length) {
									$('.atcCodes-text').parent().append($('<ul class=".atcCodes-list"></ul>'));
									$list = $('.atcCodes-list');
								}
								$list.append($li);
							}
						});
					}

					$(this).val('');

					return false;
				}
			})
			.data("ui-autocomplete")._renderItem =
			function(ul, item) {
				return $("<li></li>").data("item.autocomplete", item).append("<a>" + item.text + "</a>").appendTo(ul);
			};
	});

	$(document).on('click', '.list b a', function(e) {
		e.preventDefault();
		var $link = $(this);
		$.getJSON(this.href, null, function(data) {
			if (data == 'OK') {
				$link.closest('li').remove();
			}
		});
	});
</script>